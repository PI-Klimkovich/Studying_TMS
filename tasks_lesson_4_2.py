print("lesson 4 - Простой Фибоначчи")
# Написать программу, которая принимает на вход n, где 𝑛 ∈ [1; 20], а на
# выходе выдает число Фибоначчи, которое находится под этим номером.
f_list = [0, 1, 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, 144, 233, 377, 610, 987, 1597, 2584, 4181, 6765]
index = int(input())
print(f_list[index])
print()


print("lesson 4 - Выбрать нижний")
# Имеется арифметическая прогрессия:
# 1  1  1  1  1  1
# 2  3  4  5  6  7
# На вход программе подается число n, где 𝑛 ∈ [1; 20], а на выходе
# необходимо вывести элемент из данной прогрессии в виде вещественного числа.
index = int(input())
print(1 / (index + 1))
print()


print("lesson 4 - Вычислить длину")
# Программа должна вычислять длину отрезка по двум точкам в декартовой
# системе координат.
# На вход программе необходимо передать координаты двух точек в виде
# целых чисел разделенные запятой
point_a = input("Точка A, координаты x,y: ").split(',')
point_b = input("Точка B, координаты x,y: ").split(',')
d = ((int(point_a[0]) - int(point_b[0])) ** 2 + (int(point_a[1]) - int(point_b[1])) ** 2) ** 0.5
print(d)
print()


print("lesson 4 - И наклон")
# Основываясь на программе «Вычислить длину» необходимо вывести
# дополнительно синус угла между отрезком и осью X.
point_a = input("Точка A, координаты x,y: ").split(',')
point_b = input("Точка B, координаты x,y: ").split(',')
d = ((int(point_a[0]) - int(point_b[0])) ** 2 + (int(point_a[1]) - int(point_b[1])) ** 2) ** 0.5
sin_d = (int(point_b[1]) - int(point_a[1])) / d
print("Длина отрезка: ", d)
print("Синус угла: ", sin_d)
print()


print("lesson 4 - Три в ряд")
# Имеется геометрическая прогрессия:
# 1  1  1   1   1   1
# 2  4  8  16  32  64
# На вход программе подается число n, где 𝑛 ∈ [2; ∞), а на выходе необходимо
# вывести предыдущий элемент, текущий и следующий из данной прогрессии
# в виде строк (см. пример).
index = int(input("Введите номер элемента: "))
print("    1 /", 2 ** (index - 1))
print("  > 1 /", 2 ** index)
print("    1 /", 2 ** (index + 1))
print()

